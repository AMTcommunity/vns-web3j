apply plugin: 'java'
apply plugin: 'bintray-release'
import java.text.SimpleDateFormat

description 'web3j is a lightweight Java library for integration with Ethereum clients'

dependencies {
    compile project(':abi'),
            project(':crypto'),
            project(':tuples'),
            "com.github.jnr:jnr-unixsocket:$jnr_unixsocketVersion",
            "com.squareup.okhttp3:okhttp:$okhttpVersion",
            "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            "io.reactivex:rxjava:$rxjavaVersion"
    testCompile project(path: ':crypto', configuration: 'archives'),
            "nl.jqno.equalsverifier:equalsverifier:$equalsverifierVersion"
    testCompile "junit:junit:$junitVersion",
            "org.mockito:mockito-core:$mockitoVersion"
}

task createProperties(dependsOn: processResources) doLast {
    // if resources dir is empty we need to create this ourselves
    new File("$buildDir/resources/main/").mkdirs()

    new File("$buildDir/resources/main/version.properties").withWriter { w ->
        Properties p = new Properties()
        p['version'] = project.version.toString()
        p['timestamp'] = getTimestamp()
        p.store w, null
    }
}

def getTimestamp() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S z")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(today)
}

classes {
    dependsOn createProperties
}

//javadoc {
//    options{
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

artifacts {
    archives sourcesJar, javadocJar, testJar
}

publish {
    artifactId = 'core'
    userOrg = rootProject.userOrg
    groupId = rootProject.groupId
    uploadName = rootProject.uploadName
    publishVersion = rootProject.publishVersion
    desc = rootProject.desc
    website = rootProject.website
    licences = rootProject.licences
}
